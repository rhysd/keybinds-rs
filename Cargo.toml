[package]
name = "keybinds"
version = "0.0.6"
edition = "2021"
authors = ["rhysd <lin90162@yahoo.co.jp>"]
description = "Platform&Framework-agnostic key binding (keyboard shortcut) parser and dispatcher"
license = "MIT"
homepage = "https://github.com/rhysd/keybinds-rs#readme"
documentation = "https://docs.rs/keybinds"
repository = "https://github.com/rhysd/keybinds-rs"
keywords = ["key", "bindings", "configuration", "shortcut", "keyboard"]
categories = ["config"]
include = [
    "/src",
    "/examples",
    "/doc",
    "/LICENSE.txt",
    "/README.md",
]

[[example]]
name = "minimal"
doc-scrape-examples = true

[[example]]
name = "deserialize"
required-features = ["serde"]
doc-scrape-examples = true

[[example]]
name = "serialize"
required-features = ["serde"]
doc-scrape-examples = true

[[example]]
name = "arbitrary"
required-features = ["arbitrary"]
doc-scrape-examples = true

[[example]]
name = "crossterm"
required-features = ["crossterm", "serde"]
doc-scrape-examples = true

[[example]]
name = "termwiz"
required-features = ["termwiz"]
doc-scrape-examples = true

[[example]]
name = "winit"
required-features = ["winit"]
doc-scrape-examples = true

[[example]]
name = "iced"
required-features = ["iced"]
doc-scrape-examples = true

[features]
default = []
serde = ["dep:serde"]
crossterm = ["dep:crossterm"]
winit = ["dep:winit"]
termwiz = ["dep:termwiz"]
arbitrary = ["dep:arbitrary"]
iced = ["dep:iced"]

# TODO: Consider `default-features = false` for optional crates to reduce the number of dependencies
[dependencies]
arbitrary = { version = "1.4.1", features = ["derive"], optional = true }
bitflags = "2.8.0"
crossterm = { version = "0.28.1", optional = true }
iced = { version = "0.13.1", optional = true }
serde = { version = "1.0.217", optional = true }
termwiz = { version = "0.23.0", optional = true }
winit = { version = "0.30.9", optional = true }

[dev-dependencies]
toml = { version = "0.8.20", default-features = false, features = ["parse", "display"] }
serde = { version = "1.0.217", features = ["derive"] }

[workspace]
members = [".", "bench"]

# To generate the document locally, run the following command.
# ```
# cargo +nightly doc --no-deps -Z rustdoc-map -Z rustdoc-scrape-examples --all-features --open
# ```
[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu", "aarch64-apple-darwin", "x86_64-pc-windows-msvc"]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples"]
